// Code generated by MockGen. DO NOT EDIT.
// Source: Keyline/internal/services (interfaces: KeyService)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/key_service.go -package=mocks Keyline/internal/services KeyService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	config "Keyline/internal/config"
	services "Keyline/internal/services"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockKeyService is a mock of KeyService interface.
type MockKeyService struct {
	ctrl     *gomock.Controller
	recorder *MockKeyServiceMockRecorder
	isgomock struct{}
}

// MockKeyServiceMockRecorder is the mock recorder for MockKeyService.
type MockKeyServiceMockRecorder struct {
	mock *MockKeyService
}

// NewMockKeyService creates a new mock instance.
func NewMockKeyService(ctrl *gomock.Controller) *MockKeyService {
	mock := &MockKeyService{ctrl: ctrl}
	mock.recorder = &MockKeyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyService) EXPECT() *MockKeyServiceMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockKeyService) Generate(virtualServerName string, algorithm config.SigningAlgorithm) (services.KeyPair, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", virtualServerName, algorithm)
	ret0, _ := ret[0].(services.KeyPair)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockKeyServiceMockRecorder) Generate(virtualServerName, algorithm any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockKeyService)(nil).Generate), virtualServerName, algorithm)
}

// GetKey mocks base method.
func (m *MockKeyService) GetKey(virtualServerName string, algorithm config.SigningAlgorithm) services.KeyPair {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKey", virtualServerName, algorithm)
	ret0, _ := ret[0].(services.KeyPair)
	return ret0
}

// GetKey indicates an expected call of GetKey.
func (mr *MockKeyServiceMockRecorder) GetKey(virtualServerName, algorithm any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockKeyService)(nil).GetKey), virtualServerName, algorithm)
}
