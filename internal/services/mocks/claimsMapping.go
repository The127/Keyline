// Code generated by MockGen. DO NOT EDIT.
// Source: Keyline/internal/services/claimsMapping (interfaces: ClaimsMapper)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/claimsMapping.go -package=mocks Keyline/internal/services/claimsMapping ClaimsMapper
//

// Package mocks is a generated GoMock package.
package mocks

import (
	claimsMapping "Keyline/internal/services/claimsMapping"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockClaimsMapper is a mock of ClaimsMapper interface.
type MockClaimsMapper struct {
	ctrl     *gomock.Controller
	recorder *MockClaimsMapperMockRecorder
	isgomock struct{}
}

// MockClaimsMapperMockRecorder is the mock recorder for MockClaimsMapper.
type MockClaimsMapperMockRecorder struct {
	mock *MockClaimsMapper
}

// NewMockClaimsMapper creates a new mock instance.
func NewMockClaimsMapper(ctrl *gomock.Controller) *MockClaimsMapper {
	mock := &MockClaimsMapper{ctrl: ctrl}
	mock.recorder = &MockClaimsMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClaimsMapper) EXPECT() *MockClaimsMapperMockRecorder {
	return m.recorder
}

// MapClaims mocks base method.
func (m *MockClaimsMapper) MapClaims(params claimsMapping.Params) map[string]any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MapClaims", params)
	ret0, _ := ret[0].(map[string]any)
	return ret0
}

// MapClaims indicates an expected call of MapClaims.
func (mr *MockClaimsMapperMockRecorder) MapClaims(params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MapClaims", reflect.TypeOf((*MockClaimsMapper)(nil).MapClaims), params)
}
